library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
use IEEE.math_real.all;

entity uart is
	port (
		clock    : in std_logic; -- Clock FPGA
		--chaves   : in std_logic_vector(9 downto 0); -- Chaves
		--j0       : out std_logic;
		--led      : out std_logic;
		botao    : in std_logic; -- botÃƒÆ’Ã‚Â£o
		ledr     : out std_logic_vector(7 downto 0); -- Leds
		uart_tx : out std_logic; -- Saida Tx
		uart_rx : in std_logic;
		som        : out std_logic;
		sig_a, sig_b, sig_c, sig_d, sig_e, sig_f, sig_g : out std_logic
		--pin0 : out std_logic;
		--pin1 : out std_logic;
		--pin2 : out std_logic
		--pin0 : out std_logic
		--pin0 : out std_logic
		--pin0 : out std_logic
  );
end uart;

architecture uart_behav of uart is
	signal sig_choice     : std_logic_vector(2 downto 0);
	signal sig_newClock   : std_logic;
	signal sig_botao      : std_logic;

	signal tx_start       : std_logic;
	signal tx_busy        : std_logic;
	signal tx_data        : std_logic_vector(7 downto 0);

	signal rx_busy        : std_logic;
	signal rx_data        : std_logic_vector(7 downto 0);

	component decodificador7seg
    port (
       dadoEntrada : in std_logic_vector(3 DOWNTO 0);
       A, B, C, D, E, F, G : out std_logic
    );
	end component decodificador7seg;
	
	component newClock
	port(
		clock_fpga : in std_logic;
		choice     : in std_logic_vector(2 downto 0);
		newClock   : out std_logic
		);
	end component newClock;

	component tx
	port(
		clock   : in std_logic;
		start   : in std_logic;
		busy    : out std_logic;
		data    : in std_logic_vector (7 downto 0);
		tx_line : out std_logic
		);
	end component tx;

	component rx
	port(
		clock   : in std_logic;
		busy    : out std_logic;
		data    : out std_logic_vector(7 downto 0);
		rx_line : in std_logic
		);
	end component rx;

begin 
	som <= '1';
	c1: newClock port map (
		clock_fpga => clock,
		choice     => sig_choice,
		newClock   => sig_newClock
	);
	
	d1: decodificador7seg port map(
       dadoEntrada => rx_data(3 downto 0),
		 A => sig_a,
		 B => sig_b,
		 C => sig_c,
		 D => sig_d,
		 E => sig_e,
		 F => sig_f,
		 G => sig_g 
    );
	
	tx1: tx port map (
		clock   => sig_newClock, 
		start   => tx_start, 
		busy    => tx_busy, 
		data    => tx_data, 
		tx_line => uart_tx
	);

	rx1: rx port map (
		clock   => sig_newClock,
		busy    => rx_busy,
		data    => rx_data,
		rx_line => uart_rx
	);

	process(rx_busy)
	begin
		if (rx_busy'event and rx_busy='0') then
			ledr <= not rx_data;
		end if;
	end process;


	process (sig_newClock, botao)
	begin
		if (botao='0' and tx_busy='0') then
			tx_data <= "01100001";
			tx_start<= '1';
			--ledg<= tx_data;
		else
			tx_start<= '0';
		end if;
	end process;
	
	--sig_botao <= botao;
	--j0 <= sig_newClock;
	--led <= rx_busy;
	--pin1 <= '0';
	--pin2 <= '0';
	sig_choice <= "000";
end uart_behav;